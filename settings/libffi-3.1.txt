#solution dir=libffi-3.1\x86_64-w64-mingw32 (path made by configure script)

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************

#tested with libffi-3.1
#x64 configuration does not work with libffi-3.2 (bug in 64 assembly code)

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************

#x64 configuration:
#Open x64 Visual Studio command promt and run:

set MOZBUILDDIR=D:\gtkmm\install\mozilla-build
set MOZILLABUILD=%MOZBUILDDIR%
set MOZ_TOOLS=%MOZBUILDDIR%moztools-x64
start /d "%USERPROFILE%" "" "%MOZILLABUILD%"\msys\bin\bash --login -i

cd /d/gtkmm/build/libffi-3.1

#debug:
./configure CC="$(pwd)/msvcc.sh -m64" LD=cl.exe CPP='cl -nologo -EP' CFLAGS='-D_DEBUG -D_UNICODE -MDd -Od -EHsc' --build=x86_64-w64-mingw32 --prefix=/d/gtkmm/output
#release:
./configure CC="$(pwd)/msvcc.sh -m64" LD=cl.exe CPP='cl -nologo -EP' CFLAGS='-D_UNICODE -MDd -O2  -EHsc' --build=x86_64-w64-mingw32 --prefix=/d/gtkmm/output

#Open Visual Studio, select configuration and build.

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************


#x86 configuration:
#Open mozilla-build shell and run:
cd /d/gtkmm/build/libffi-3.1

#debug:
./configure CC="$(pwd)/msvcc.sh" LD=cl.exe CPP='cl -nologo -EP' CFLAGS='-D_DEBUG -D_UNICODE -MDd -Od -EHsc' --build=i686-pc-mingw32 --prefix=/d/gtkmm/output
#release:
./configure CC="$(pwd)/msvcc.sh" LD=cl.exe CPP='cl -nologo -EP' CFLAGS='-D_UNICODE -MDd -O2  -EHsc' --build=i686-pc-mingw32 --prefix=/d/gtkmm/output

#Open Visual Studio, select configuration and build.

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************


#compile asm:
#x64:
cl.exe /EP /I $(SolutionDir) /I $(SolutionDir)include %(FullPath) > $(Platform)/$(Configuration)/win64_plain.asm
ml64.exe /c /Cx /Fo $(Platform)/$(Configuration)/win64.obj $(Platform)/$(Configuration)/win64_plain.asm

#output:
$(Platform)/$(Configuration)/win64.obj

#x86
cl.exe /EP /I $(SolutionDir) /I $(SolutionDir)include %(FullPath) > $(Platform)/$(Configuration)/win32_plain.asm
ml.exe /c /Cx /Fo $(Platform)/$(Configuration)/win32.obj $(Platform)/$(Configuration)/win32_plain.asm

#output:
$(Platform)/$(Configuration)/win32.obj

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************

#troubleshooting:
#environment variables:
export PATH=/d/gtkmm/install/visualstudio/Common7/IDE:$PATH
export PATH=/d/gtkmm/install/visualstudio/VC/bin/amd64:$PATH
export LIB=/d/gtkmm/install/visualstudio/vc/lib:$LIB
export INCLUDE=/d/gtkmm/install/visualstudio/vc/include:$INCLUDE

#building dll probably fails under:
libtool: link: /d/gtkmm/build/libffi-3.1/msvcc.sh -m64 -o .libs/ffi.dll.lib
  src/.libs/prep_cif.obj src/.libs/types.obj src/.libs/raw_api.obj src/.libs/java_raw_api.obj
  src/.libs/closures.obj src/x86/.libs/ffi.obj src/x86/.libs/win64.obj
-m64 -Od   `func_echo_all "" | /bin/sed 's/ -lc$//'` -link -dll

`cl -MD -nologo -W3 -Fe.libs/ffi.dll.lib -Fd.libs/ffi -Fp.libs/ffi -Fa.libs/ffi 
src/.libs/prep_cif.obj src/.libs/types.obj src/.libs/raw_api.obj src/.libs/java_raw_api.obj
 src/.libs/closures.obj src/x86/.libs/ffi.obj src/x86/.libs/win64.obj
-Od -link -dll -link -OPT:REF -OPT:ICF -INCREMENTAL:NO

LINK : warning LNK4044: unrecognized option '/link'; ignored

#note:
#to re-run:
#make clean
#make

#note:
#testCaller needs to be inspected because of Runtime check #2 failure